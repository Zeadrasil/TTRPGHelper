#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TTRPG_Helper.Database_Files
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Spells")]
	public partial class SpellLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPreparedSpell(PreparedSpell instance);
    partial void UpdatePreparedSpell(PreparedSpell instance);
    partial void DeletePreparedSpell(PreparedSpell instance);
    #endregion
		
		public SpellLINQDataContext() : 
				base(global::TTRPG_Helper.Properties.Settings.Default.SpellsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SpellLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpellLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpellLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpellLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PreparedSpell> PreparedSpells
		{
			get
			{
				return this.GetTable<PreparedSpell>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreparedSpells")]
	public partial class PreparedSpell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CharacterId;
		
		private string _SpellName;
		
		private int _DiceAmount;
		
		private int _DiceSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCharacterIdChanging(int value);
    partial void OnCharacterIdChanged();
    partial void OnSpellNameChanging(string value);
    partial void OnSpellNameChanged();
    partial void OnDiceAmountChanging(int value);
    partial void OnDiceAmountChanged();
    partial void OnDiceSizeChanging(int value);
    partial void OnDiceSizeChanged();
    #endregion
		
		public PreparedSpell()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterId", DbType="Int NOT NULL")]
		public int CharacterId
		{
			get
			{
				return this._CharacterId;
			}
			set
			{
				if ((this._CharacterId != value))
				{
					this.OnCharacterIdChanging(value);
					this.SendPropertyChanging();
					this._CharacterId = value;
					this.SendPropertyChanged("CharacterId");
					this.OnCharacterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpellName
		{
			get
			{
				return this._SpellName;
			}
			set
			{
				if ((this._SpellName != value))
				{
					this.OnSpellNameChanging(value);
					this.SendPropertyChanging();
					this._SpellName = value;
					this.SendPropertyChanged("SpellName");
					this.OnSpellNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiceAmount", DbType="Int NOT NULL")]
		public int DiceAmount
		{
			get
			{
				return this._DiceAmount;
			}
			set
			{
				if ((this._DiceAmount != value))
				{
					this.OnDiceAmountChanging(value);
					this.SendPropertyChanging();
					this._DiceAmount = value;
					this.SendPropertyChanged("DiceAmount");
					this.OnDiceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiceSize", DbType="Int NOT NULL")]
		public int DiceSize
		{
			get
			{
				return this._DiceSize;
			}
			set
			{
				if ((this._DiceSize != value))
				{
					this.OnDiceSizeChanging(value);
					this.SendPropertyChanging();
					this._DiceSize = value;
					this.SendPropertyChanged("DiceSize");
					this.OnDiceSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
